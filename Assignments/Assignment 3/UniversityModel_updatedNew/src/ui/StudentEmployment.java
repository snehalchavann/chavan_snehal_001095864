/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import info5100.university.example.CourseCatalog.Course;
import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.EmploymentHistory.Employment;
import info5100.university.example.Persona.EmploymentHistory.EmploymentHistroy;
import info5100.university.example.Persona.StudentProfile;
import info5100.university.example.University;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.regex.Matcher;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author mrudu
 */
public class StudentEmployment extends javax.swing.JPanel{

    /**
     * Creates new form StudentEmployment
     */
    StudentProfile sp;
    University uni;
    JComboBox listOfCourses;
    JComboBox listOfselectedCourses;
    Object CourseFromListOfCourses;
    Object CourseFromListOfSelectedCourses;
    String JobProfile;
    String[] selectedCourses;
    Object departmentName;
    List<String> selectedCoursesList = new ArrayList<>();
    int j = 1;
    Department d1;
    
    ImageIcon northeasternLogo = new ImageIcon("husky.png");
    
    public StudentEmployment(StudentProfile sp, University uni) {
        initComponents();
        getListOfProfile();
        this.sp = sp;
        this.uni = uni;
        getAllCourses();
        jLabel6.setIcon(northeasternLogo);
        Border blackline = BorderFactory.createLineBorder(Color.black);
        jPanel1.setBorder(blackline);
        getDepartment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        SubmitButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Student Employment Feedback Form");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Employer Name :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Job Profile :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Relevant courses :");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel6.setText("jLabel6");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("STUDENT MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(29, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        SubmitButton.setBackground(new java.awt.Color(0, 0, 0));
        SubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SubmitButton.setForeground(new java.awt.Color(255, 255, 255));
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Department :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(104, 104, 104)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel8)
                .addGap(52, 52, 52)
                .addComponent(SubmitButton)
                .addGap(61, 61, 61))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = false;
        
        try{
        List<Employment> employmentList = sp.getEmploymenthistory().getEmployments();
        boolean empExist = false;
        
        
        if(jTextField1.getText().isEmpty()){
            flag = true;
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        }
        
        if(flag == false){
        for(int a = 0; a < uni.getDepartmentList().size(); a++){
            if(uni.getDepartmentList().get(a).getName().equals(departmentName.toString())){
                d1 = uni.getDepartmentList().get(a);
            }
        }
        
        for(int i =0; i < employmentList.size(); i++){
            Employment e = employmentList.get(i);
            System.out.println("for>>>>");
            if(e.getEmployer().getName().equals(jTextField1.getText()) && 
                    e.getJob().equals(JobProfile)){
                    System.out.println("if>>>>");
                    empExist = true;
                    List<Course> courseOfferedList = e.getRelevantcourseoffers();
                    List<Course> catalog = d1.getCourseCatalog().getCourseList();
                    
                    for(int j = 0; j < selectedCoursesList.size(); j++){
                        for(int k =0; k < courseOfferedList.size(); k++){
                            if(selectedCoursesList.get(j).equals(courseOfferedList.get(k).getName())){
                                for(int l = 0; l < catalog.size(); l++){
                                    if(selectedCoursesList.get(j).equals(catalog.get(l).getName())){
                                        courseOfferedList.add(catalog.get(l));
                                    }
                                }
                            }
                        }
                    }
                }   
            }
        
        if(empExist == false){
            Employment em = sp.getEmploymenthistory().newEmployment(JobProfile, jTextField1.getText());
            ArrayList<Course> courseOfferedList = em.getRelevantcourseoffers();
            List<Course> catalog = d1.getCourseCatalog().getCourseList();
                    
            for(int j = 0; j < selectedCoursesList.size(); j++){
                for(int l = 0; l < catalog.size(); l++){
                    if(selectedCoursesList.get(j).equals(catalog.get(l).getName())){
                        courseOfferedList.add(catalog.get(l));
                    }
                }
            }
            
            //System.out.println("job Profile>>>"+ JobProfile);
        }
        
            for(int m =0; m < employmentList.size(); m++){
                System.out.println(">>>"+ employmentList.get(m).getEmployer().getName());
                System.out.println(">>>"+ employmentList.get(m).getJob());
                System.out.println(">>>"+ d1.getName());
                for(int n = 0; n < employmentList.get(m).getRelevantcourseoffers().size(); n++){
                    System.out.println("list>>>"+ employmentList.get(m).getRelevantcourseoffers().get(n).getName());
                }
            }
        
        jTextField1.setText("");
        SubmitButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                listOfCourses.removeAllItems();
            }
        });
        JOptionPane.showMessageDialog(null, "Your Feedback is submitted");
        }
        }catch(NullPointerException n){
            flag = true;
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        }
        
    }//GEN-LAST:event_SubmitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void getListOfProfile() {
        String[] profileList = { "--None--", "Full-Stack Development", "Data Analyst/ Engineer", 
            "Machine Learning / Data Science"};
        
        JComboBox profiles = new JComboBox(profileList);
        profiles.setSelectedIndex(0);
        profiles.setBounds(345, 310, 240, 41);
        profiles.setBackground(Color.white);
        add(profiles);
        
        profiles.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                // Get the source of the component, which is our combo
                // box.
                JComboBox profiles = (JComboBox) event.getSource();

                // Print the selected items and the action command.
                JobProfile = profiles.getSelectedItem().toString();
                System.out.println("Selected Item  = " + JobProfile);
            }
        });
    }

    private void getAllCourses() {
        List<String> allCOursesOfStudent = sp.getTranscript();
        String[] courses = new String[allCOursesOfStudent.size()+1];
        courses[0] = "--None--";
        
        for(int i = 0; i < allCOursesOfStudent.size(); i++){
            courses[i+1] = allCOursesOfStudent.get(i);
        }
        
        listOfCourses = new JComboBox(courses);
        listOfCourses.setSelectedIndex(0);
        listOfCourses.setBounds(345, 370, 240, 41);
        listOfCourses.setBackground(Color.white);
        add(listOfCourses);
        
        listOfCourses.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                // Get the source of the component, which is our combo
                // box.
                JComboBox listOfCourses = (JComboBox) event.getSource();

                // Print the selected items and the action command.
                CourseFromListOfCourses = listOfCourses.getSelectedItem();
                System.out.println("Selected Item list 1= " + CourseFromListOfCourses);
            }
        });
        
        selectedCourses = new String[allCOursesOfStudent.size()+1];
        selectedCourses[0] = "--None--";
        
        listOfselectedCourses = new JComboBox(selectedCourses);
        listOfselectedCourses.setSelectedIndex(0);
        listOfselectedCourses.setBounds(665, 370, 240, 41);
        listOfselectedCourses.setBackground(Color.white);
        add(listOfselectedCourses);
        
        listOfselectedCourses.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                // Get the source of the component, which is our combo
                // box.
                JComboBox listOfselectedCourses = (JComboBox) event.getSource();

                // Print the selected items and the action command.
                CourseFromListOfSelectedCourses = listOfselectedCourses.getSelectedItem();
                System.out.println("Selected Item list 2 = " + CourseFromListOfSelectedCourses);
            }
        });
        
        Icon icon = new ImageIcon("icons8_arrow_24px.png");
        JButton button7 = new JButton(icon);
        button7.setBounds(600, 380, 50, 35);
        add(button7);
        
        button7.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // Add item "One" at the beginning of the list.
                System.out.println(">>>>> addItem");
                listOfselectedCourses.insertItemAt(CourseFromListOfCourses.toString(), j);
                j++;
                selectedCoursesList.add(CourseFromListOfCourses.toString());
                listOfCourses.removeItem(CourseFromListOfCourses);
                //selectedCourses[j] = CourseFromListOfCourses;
            }
        });
        
        Icon icon2 = new ImageIcon("icons8_arrow_pointing_left_26px_1.png");
        JButton button8 = new JButton(icon2);
        button8.setBounds(600, 425, 50, 35);
        add(button8);
        
        button8.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // Add item "One" at the beginning of the list.
                System.out.println(">>>>> 2 addItem");
                listOfCourses.addItem(CourseFromListOfSelectedCourses);
                j++;
                //listOfCourses.removeItem(CourseFromListOfCourses);
                listOfselectedCourses.removeItem(CourseFromListOfSelectedCourses);
                selectedCoursesList.remove(CourseFromListOfSelectedCourses);
            }
        });
        
    }

    private void getDepartment() {
        List<Department> listOfDepartments = uni.getDepartmentList();
        String[] departments = new String[listOfDepartments.size()+1];
        departments[0] = "--None--";
        System.out.println("size>>>>"+listOfDepartments.size());
        
        for(int i = 0; i < listOfDepartments.size(); i++){
            departments[i+1] = listOfDepartments.get(i).getName();
        }
        
        JComboBox departmentList = new JComboBox(departments);
        departmentList.setSelectedIndex(0);
        departmentList.setBounds(345, 455, 240, 41);
        departmentList.setBackground(Color.white);
        add(departmentList);
        
        departmentList.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                // Get the source of the component, which is our combo
                // box.
                JComboBox departmentList = (JComboBox) event.getSource();

                // Print the selected items and the action command.
                departmentName = departmentList.getSelectedItem();
                System.out.println("Selected Item list 2 = " + departmentName);
            }
        });
    }
    
    
}
