/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author snehalchavan
 */
public class ManageOrder extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrder
     */
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount user;
    Customer customer;
    private Restaurant restaurantAssigned;
    private DefaultTableModel model;
    
    
    public ManageOrder(JPanel userProcessContainer,EcoSystem system,UserAccount user) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.user = user;
        populateRestaurantOrders();
        populateDeliveryMan();
        jPanel1_viewOrder.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRestaurantOrders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1_viewOrder = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton_accept = new javax.swing.JButton();
        jButton_reject = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableViewData = new javax.swing.JTable();
        jComboBox_deliverymanList = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton_AssignDeliveryMan = new javax.swing.JButton();

        jTableRestaurantOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRestaurantOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRestaurantOrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRestaurantOrders);

        jLabel1.setText("Restaurant's Orders");

        jLabel2.setText("View Order");

        jLabel3.setText("Order ID");

        jButton_accept.setText("Accept");
        jButton_accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_acceptActionPerformed(evt);
            }
        });

        jButton_reject.setText("Reject ");
        jButton_reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_rejectActionPerformed(evt);
            }
        });

        jTableViewData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableViewData);

        javax.swing.GroupLayout jPanel1_viewOrderLayout = new javax.swing.GroupLayout(jPanel1_viewOrder);
        jPanel1_viewOrder.setLayout(jPanel1_viewOrderLayout);
        jPanel1_viewOrderLayout.setHorizontalGroup(
            jPanel1_viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1_viewOrderLayout.createSequentialGroup()
                .addGroup(jPanel1_viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1_viewOrderLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1_viewOrderLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel3)
                        .addGap(40, 40, 40)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1_viewOrderLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1_viewOrderLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jButton_accept)
                        .addGap(64, 64, 64)
                        .addComponent(jButton_reject)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1_viewOrderLayout.setVerticalGroup(
            jPanel1_viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1_viewOrderLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1_viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel1_viewOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_accept)
                    .addComponent(jButton_reject))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel4.setText("Delivery Man");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("Assign Delivery Man");

        jButton_AssignDeliveryMan.setText("Assign Delivery Man");
        jButton_AssignDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AssignDeliveryManActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(148, 148, 148))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(108, 108, 108))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1_viewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_deliverymanList, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton_AssignDeliveryMan)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1_viewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jLabel5)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_deliverymanList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addComponent(jButton_AssignDeliveryMan)))
                .addGap(240, 240, 240))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableRestaurantOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRestaurantOrdersMouseClicked
        // TODO add your handling code here:
        jPanel1_viewOrder.setVisible(true);
        int selectedRow = jTableRestaurantOrders.getSelectedRow();
        DefaultTableModel model1 = (DefaultTableModel) jTableRestaurantOrders.getModel();
        String name = model1.getValueAt(selectedRow, 2).toString();
        ArrayList<Order> restaurantOrders = getRestaurant().getRestaurantOrder();
        for(int i=0;i<restaurantOrders.size();i++){
            if(restaurantOrders.get(i).getCustomer().getCustomerName().equals(name)){
                customer = restaurantOrders.get(i).getCustomer();
            }
        }
        model = new DefaultTableModel();
            jTableViewData.setModel(model);
            model.addColumn("Food Name");
            model.addColumn("Price");
            model.addColumn("Quantity");

        ArrayList<Customer> customerList = system.getCustomerDirectory().getCustomerList();
        
        ArrayList<Order> orderItems = customer.getOrder();
        Order orderLatest = orderItems.get(orderItems.size()-1);
        for(int j=0;j<orderLatest.getOrderItems().size();j++){
            
            DefaultTableModel model = (DefaultTableModel) jTableViewData.getModel();
            model.addRow(new Object[]{
                orderLatest.getOrderItems().get(j).getMenuItem(),
                Integer.parseInt(orderLatest.getOrderItems().get(j).getMenuPrice())*orderLatest.getOrderItems().get(j).getQuantity(),
                orderLatest.getOrderItems().get(j).getQuantity()
            });
//            orderItems.get(j).getMenuItem();
//            orderItems.get(j).getMenuPrice();
//            orderItems.get(j).getQuantity();
        }
        
    }//GEN-LAST:event_jTableRestaurantOrdersMouseClicked

    private void jButton_rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_rejectActionPerformed
        // TODO add your handling code here:
        ArrayList<Order> restaurantOrders = getRestaurant().getRestaurantOrder();
        int selectedRow = jTableRestaurantOrders.getSelectedRow();
        DefaultTableModel model1 = (DefaultTableModel) jTableRestaurantOrders.getModel();
        String name = model1.getValueAt(selectedRow, 2).toString();
        for(int i=0;i<restaurantOrders.size();i++){
            if(restaurantOrders.get(i).getCustomer().getCustomerName().equals(name)){
                customer = restaurantOrders.get(i).getCustomer();
                restaurantOrders.remove(i);
                
            }
        }
        ArrayList<Order> order = customer.getOrder();
        order.get(order.size()-1).setOrderstatus("Order Rejected");
        populateRestaurantOrders();
    }//GEN-LAST:event_jButton_rejectActionPerformed

    private void jButton_acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_acceptActionPerformed
        // TODO add your handling code here:
        ArrayList<Order> restaurantOrders = getRestaurant().getRestaurantOrder();
        int selectedRow = jTableRestaurantOrders.getSelectedRow();
        DefaultTableModel model1 = (DefaultTableModel) jTableRestaurantOrders.getModel();
        String name = model1.getValueAt(selectedRow, 2).toString();
        for(int i=0;i<restaurantOrders.size();i++){
            if(restaurantOrders.get(i).getCustomer().getCustomerName().equals(name)){
                customer = restaurantOrders.get(i).getCustomer();
                restaurantOrders.get(i).setOrderstatus("Preparing order");
            }
        }
        ArrayList<Order> order = customer.getOrder();
        order.get(order.size()-1).setOrderstatus("Order Accepted");
        populateRestaurantOrders();
    }//GEN-LAST:event_jButton_acceptActionPerformed

    private void jButton_AssignDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AssignDeliveryManActionPerformed
        // TODO add your handling code here:
        String deliveryman = jComboBox_deliverymanList.getSelectedItem().toString();
        int selectedRow = jTableRestaurantOrders.getSelectedRow();
        Order findOrder = null;
        DefaultTableModel model1 = (DefaultTableModel) jTableRestaurantOrders.getModel();
        String id = model1.getValueAt(selectedRow, 0).toString();
        ArrayList<DeliveryMan> deliverymanList = system.getDeliveryManDirectory().getDeliverymanList();
        for(int j=0;j<system.getOrderDirectory().getOrderList().size();j++){
            findOrder = system.getOrderDirectory().findOrder(id);
        }
        for(int i=0;i<deliverymanList.size();i++){
            if(deliverymanList.get(i).getName().equals(deliveryman)){
                deliverymanList.get(i).setOrder(findOrder);
                
                JOptionPane.showMessageDialog(null, "DeliveryMan assigned");
                System.out.println("Deliveryman........."+deliverymanList.get(i).getOrder().get(deliverymanList.get(i).getOrder().size()-1).getCustomer().getCustomerName());
                break;
            }
        }
        
    }//GEN-LAST:event_jButton_AssignDeliveryManActionPerformed


    private Restaurant getRestaurant() {
        ArrayList<Restaurant> restaurantList = system.getRestaurantDirectory().getRestaurantList();
        for(int i=0;i<restaurantList.size();i++){
            if(restaurantList.get(i).getManager().getUsername().equals(user.getUsername())){
                restaurantAssigned = restaurantList.get(i);
            }
        }
        return restaurantAssigned;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AssignDeliveryMan;
    private javax.swing.JButton jButton_accept;
    private javax.swing.JButton jButton_reject;
    private javax.swing.JComboBox<String> jComboBox_deliverymanList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1_viewOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableRestaurantOrders;
    private javax.swing.JTable jTableViewData;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void populateRestaurantOrders() {
        model = new DefaultTableModel();
        jTableRestaurantOrders.setModel(model);
        model.addColumn("Order ID");
        model.addColumn("Order status");
        model.addColumn("Customer Name");
        model.addColumn("Customer Address");
        model.addColumn("Customer Contact Number");
        ArrayList<Order> restaurantOrders = getRestaurant().getRestaurantOrder();
        for(int i=0;i<restaurantOrders.size();i++){
            model.addRow(new Object[]{
                restaurantOrders.get(i).getOrderID(),
                restaurantOrders.get(i).getOrderstatus(),
                restaurantOrders.get(i).getCustomer().getCustomerName(), 
                restaurantOrders.get(i).getCustomer().getAddress(),
                restaurantOrders.get(i).getCustomer().getContactNumber()
            });
        }
    }

    private void populateDeliveryMan() {
        ArrayList<DeliveryMan> deliverymanList = system.getDeliveryManDirectory().getDeliverymanList();
        
        for(int i=0;i<deliverymanList.size();i++){
            jComboBox_deliverymanList.addItem(deliverymanList.get(i).getName());
        }
    }
}
